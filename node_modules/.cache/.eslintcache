[{"/home/xonn/projetos/my-app/src/index.js":"1","/home/xonn/projetos/my-app/src/App.js":"2","/home/xonn/projetos/my-app/src/reportWebVitals.js":"3","/home/xonn/projetos/my-app/src/components/NavBar.js":"4","/home/xonn/projetos/my-app/src/components/Banner.js":"5","/home/xonn/projetos/WebPortfolio/src/index.js":"6","/home/xonn/projetos/WebPortfolio/src/App.js":"7","/home/xonn/projetos/WebPortfolio/src/reportWebVitals.js":"8","/home/xonn/projetos/WebPortfolio/src/components/Banner.js":"9","/home/xonn/projetos/WebPortfolio/src/components/NavBar.js":"10"},{"size":535,"mtime":1675884997747,"results":"11","hashOfConfig":"12"},{"size":328,"mtime":1675888046107,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1675884997747,"results":"14","hashOfConfig":"12"},{"size":2722,"mtime":1675887982777,"results":"15","hashOfConfig":"12"},{"size":219,"mtime":1675888219117,"results":"16","hashOfConfig":"12"},{"size":535,"mtime":1675890240197,"results":"17","hashOfConfig":"18"},{"size":328,"mtime":1675890240187,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1675890240197,"results":"20","hashOfConfig":"18"},{"size":3417,"mtime":1676064371890,"results":"21","hashOfConfig":"18"},{"size":2708,"mtime":1676063834530,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jliq7p",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i4whd8",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"53","usedDeprecatedRules":"54"},"/home/xonn/projetos/my-app/src/index.js",[],[],"/home/xonn/projetos/my-app/src/App.js",["55"],[],"/home/xonn/projetos/my-app/src/reportWebVitals.js",[],[],"/home/xonn/projetos/my-app/src/components/NavBar.js",["56","57","58"],[],"/home/xonn/projetos/my-app/src/components/Banner.js",[],[],"/home/xonn/projetos/WebPortfolio/src/index.js",[],[],"/home/xonn/projetos/WebPortfolio/src/App.js",["59"],[],"/home/xonn/projetos/WebPortfolio/src/reportWebVitals.js",[],[],"/home/xonn/projetos/WebPortfolio/src/components/Banner.js",["60","61"],[],"/home/xonn/projetos/WebPortfolio/src/components/NavBar.js",["62","63"],[],"import { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport { useState, useEffect } from \"react\";\r\nimport logo from '../assets/img/logo.svg'\r\nimport navIcon1 from '../assets/img/nav-icon1.svg'\r\nimport navIcon2 from '../assets/img/nav-icon2.svg'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [activeLink, setActiveLink] = useState('home');\r\n    const [scrolled, setScrolled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            if (window.scrollY > 50) {\r\n                setScrolled(true);\r\n            } else {\r\n                setScrolled(false);\r\n            }\r\n        }\r\n\r\n        window.addEventListener(\"scroll\", onScroll);\r\n\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, [])\r\n\r\n    const onUpdateActiveLink = (value) => {\r\n        setActiveLink(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" className={scrolled ? \"scrolled\" : \"\"}>\r\n            <Container>\r\n                <Navbar.Brand href=\"#homee\">\r\n                    <img src={logo} alt=\"Logo\"></img>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\r\n                        <Nav.Link href=\"#habilidades\" className={activeLink === 'habilidades' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('habilidades')}>Habilidades</Nav.Link>\r\n                        <Nav.Link href=\"#projetos\" className={activeLink === 'projetos' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projetos')}>Projetos</Nav.Link>\r\n                    </Nav>\r\n                    <span className=\"navbar-text\">\r\n                        <div className=\"social-icon\">\r\n                            <a href=\"https://www.linkedin.com/in/augusto-laursen/\" target=\"_blank\"><img src={navIcon1} alt=\"\"></img></a>\r\n                            <a href=\"https://www.instagram.com/augustoalbertoni/\" target=\"_blank\"><img src={navIcon2} alt=\"\"></img></a>\r\n                        </div>\r\n                        <button className=\"vvd\" onClick={() => console.log('conectar')} >\r\n                            <span>Vamos nos conectar!</span>\r\n                        </button>\r\n                    </span>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n",[],{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":49,"column":29,"nodeType":"70","endLine":49,"endColumn":41},{"ruleId":"68","severity":1,"message":"69","line":50,"column":29,"nodeType":"70","endLine":50,"endColumn":41},{"ruleId":"68","severity":1,"message":"69","line":51,"column":29,"nodeType":"70","endLine":51,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"71","line":12,"column":12,"nodeType":"66","messageId":"67","endLine":12,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":22,"column":8,"nodeType":"74","endLine":22,"endColumn":14,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":48,"column":29,"nodeType":"70","messageId":"78","endLine":48,"endColumn":100,"fix":"79"},{"ruleId":"76","severity":1,"message":"77","line":49,"column":29,"nodeType":"70","messageId":"78","endLine":49,"endColumn":99,"fix":"80"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["81"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"82","text":"83"},{"range":"84","text":"83"},{"desc":"85","fix":"86"},[2188,2188]," rel=\"noreferrer\"",[2325,2325],"Update the dependencies array to be: [delta, text, tick]",{"range":"87","text":"88"},[806,812],"[delta, text, tick]"]